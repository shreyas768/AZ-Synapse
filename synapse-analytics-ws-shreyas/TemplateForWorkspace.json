{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapse-analytics-ws-shreyas"
		},
		"ls_serverless_sql_pool_db_nyc_taxi_ldw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_serverless_sql_pool_db_nyc_taxi_ldw'"
		},
		"ls_synapse_course_dl_shreyas_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://synapsecoursedlshreyas.dfs.core.windows.net/"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/pl_create_silver_tables')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach Folder Path",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('v_folder_path_usp_name_array')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Delete Silver Taxi Zone Folder",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_silver_taxi_data_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"p_folder_path": {
													"value": "@item().folder_path",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "Create Silver Taxi Zone",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Delete Silver Taxi Zone Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@item().usp_name",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_serverless_sql_pool_db_nyc_taxi_ldw",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"v_folder_path": {
						"type": "String",
						"defaultValue": "silver/taxi_zone"
					},
					"v_usp_name": {
						"type": "String",
						"defaultValue": "silver.usp_silver_taxi_zone"
					},
					"v_folder_path_usp_name_array": {
						"type": "Array",
						"defaultValue": [
							{
								"folder_path": "silver/calender",
								"usp_name": "silver.usp_silver_calendar"
							},
							{
								"folder_path": "silver/taxi_zone",
								"usp_name": "silver.usp_silver_taxi_zone"
							},
							{
								"folder_path": "silver/trip_type",
								"usp_name": "silver.usp_silver_trip_type"
							},
							{
								"folder_path": "silver/vendor",
								"usp_name": "silver.usp_silver_vendor"
							},
							{
								"folder_path": "silver/rate_code",
								"usp_name": "silver.usp_silver_rate_code"
							},
							{
								"folder_path": "silver/payment_type",
								"usp_name": "silver.usp_silver_payment_type"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_silver_taxi_data_dynamic')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_serverless_sql_pool_db_nyc_taxi_ldw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pl_create_silver_taxi_zone')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Delete Silver Taxi Zone Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_silver_taxi_zone",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Create Silver Taxi Zone",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Delete Silver Taxi Zone Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_serverless_sql_pool_db_nyc_taxi_ldw",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "IF OBJECT_ID('silver.taxi_zone') IS NOT NULL DROP EXTERNAL TABLE silver.taxi_zone;\n"
								},
								{
									"type": "NonQuery",
									"text": "CREATE EXTERNAL TABLE silver.taxi_zone\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/taxi_zone',\n        file_format = parquet_file_format\n    )\nAS\nSELECT *\n    from bronze.taxi_zone;"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_silver_taxi_zone')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_serverless_sql_pool_db_nyc_taxi_ldw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pl_create_silver_taxi_zone_usp')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Delete Silver Taxi Zone Folder",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_silver_taxi_zone",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Create Silver Taxi Zone",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Delete Silver Taxi Zone Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[silver].[usp_silver_taxi_zone]"
						},
						"linkedServiceName": {
							"referenceName": "ls_serverless_sql_pool_db_nyc_taxi_ldw",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_silver_taxi_zone')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_serverless_sql_pool_db_nyc_taxi_ldw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_silver_taxi_data_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_synapse_course_dl_shreyas",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_folder_path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().p_folder_path",
							"type": "Expression"
						},
						"fileSystem": "nyc-taxi-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "location_id",
						"type": "INT_16"
					},
					{
						"name": "borough",
						"type": "UTF8"
					},
					{
						"name": "zone",
						"type": "UTF8"
					},
					{
						"name": "service_zone",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_synapse_course_dl_shreyas')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_silver_taxi_zone')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_synapse_course_dl_shreyas",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver/taxi_zone",
						"fileSystem": "nyc-taxi-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "location_id",
						"type": "INT_16"
					},
					{
						"name": "borough",
						"type": "UTF8"
					},
					{
						"name": "zone",
						"type": "UTF8"
					},
					{
						"name": "service_zone",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_synapse_course_dl_shreyas')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_serverless_sql_pool_db_nyc_taxi_ldw')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ls_serverless_sql_pool_db_nyc_taxi_ldw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_synapse_course_dl_shreyas')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_synapse_course_dl_shreyas_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/10_check_for_duplicates')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery;\n\n--Check for duplicates in the Taxi Zone data\n\nSELECT\n    location_id, COUNT(1) as number_of_records\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', FIRST_ROW = 2, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n    ) WITH (\n        location_id SMALLINT 1,\n        borough VARCHAR(15) 2,\n        zone VARCHAR(50) 3,\n        service_zone VARCHAR(15) 4\n\n    )\n    AS [result]\n    GROUP BY location_id\n    HAVING COUNT(1) > 1  --No Duplicates",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/10_create_silver_rate_code')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n\nIF OBJECT_ID('silver.rate_code') IS NOT NULL DROP EXTERNAL TABLE silver.rate_code\nGO\n\nCREATE EXTERNAL TABLE silver.rate_code\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/rate_code',\n        file_format = parquet_file_format\n    )\nAS\nSELECT  rate_code_id, rate_code\nFROM OPENROWSET(\n        BULK 'raw/rate_code.json', DATA_SOURCE = 'nyc_taxi_src',\n        FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0b'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS rate_code\n    CROSS APPLY OPENJSON(jsonDoc)\n    WITH (\n        rate_code_id TINYINT,\n        rate_code VARCHAR(20)\n    )\n    GO;\n\nSELECT * FROM silver.rate_code;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/11_create_silver_payment_type')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n\nIF OBJECT_ID('silver.payment_type') IS NOT NULL DROP EXTERNAL TABLE silver.payment_type\nGO\n\nCREATE EXTERNAL TABLE silver.payment_type\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/payment_type',\n        file_format = parquet_file_format\n    )\nAS\nSELECT  payment_type, description\nFROM OPENROWSET(\n        BULK 'raw/payment_type.json', DATA_SOURCE = 'nyc_taxi_src',\n               FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0a'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS payment_type\n    CROSS APPLY OPENJSON(jsonDoc)\n    WITH (\n        payment_type SMALLINT,\n        description VARCHAR(20) '$.payment_type_desc'\n    )\n    GO\n\nSELECT * FROM silver.payment_type;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/11_data_quality_checks')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery;\n\n--Identify any data quality issues in trip total amount\n\nSELECT TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n\n\nSELECT MIN(total_amount) AS min_total_amount,\nMAX(total_amount) AS max_total_amount,\nAVG(total_amount) AS avg_total_amount,\nCOUNT(1) AS total_number_of_records,\nCOUNT(total_amount) AS not_null_total_number_of_records\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n\nSELECT payment_type, COUNT(1) AS number_of_records\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n    --WHERE total_amount < 0\n    group by payment_type\n    ORDER BY payment_type;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/12_create_silver_trip_data_green')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n\n/*\nIF OBJECT_ID('silver.trip_data_green') IS NOT NULL DROP EXTERNAL TABLE silver.trip_data_green\nGO\n\nCREATE EXTERNAL TABLE silver.trip_data_green\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/trip_data_green',\n        file_format = parquet_file_format\n    )\nAS\nSELECT *\n    from bronze.trip_data_green_csv;\n\nSELECT * FROM silver.trip_data_green;\n*/\n\nEXEC silver.usp_silver_trip_data_green '2021','08';\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/12_join_data')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery\n\n\n--Identify number of trips made from the borough\nSELECT TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n\n    WHERE PULocationID is NULL\n\n\nSELECT taxi_zone.borough, COUNT(1) as number_of_trips FROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/',\n        FORMAT = 'PARQUET'\n    ) AS trip_data\n    JOIN\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', FIRST_ROW = 2\n    ) WITH (\n        location_id SMALLINT 1,\n        borough VARCHAR(15) 2,\n        zone VARCHAR(50) 3,\n        service_zone VARCHAR(15) 4\n    )\n    AS taxi_zone\n    ON trip_data.PULocationID = taxi_zone.location_id\n    GROUP BY taxi_zone.borough\n    ORDER BY number_of_trips\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/13_create_silver_views')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\n\n\n--create view for trip_data_green\nDROP VIEW IF EXISTS silver.vw_trip_data_green_csv\nGO\nCREATE VIEW silver.vw_trip_data_green_csv\nAS\nSELECT\n    \n    result.filepath(1) as year,\n    result.filepath(2) as month,\n    result.*\nFROM\n    OPENROWSET(\n        BULK 'silver/trip_data_green_csv/year=*/month=*/*.csv', DATA_SOURCE = 'nyc_taxi_src',\n        FORMAT = 'PARQUET'\n    )WITH(\n        VendorID INT,\n        lpep_pickup_datetime DATETIME2(7),\n        lpep_dropoff_datetime DATETIME2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n    ) AS [result]\nGO\n\nSELECT TOP(100) * from silver.vw_trip_data_green_csv\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/13_simple_transformation')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery;\n\n--Number of trips made by duration in hours\nSELECT \nDATEDIFF(MINUTE, lpep_pickup_datetime, lpep_dropoff_datetime)/60 AS from_hour,\nDATEDIFF(MINUTE, lpep_pickup_datetime, lpep_dropoff_datetime)/60 + 1 AS to_hour,\nCOUNT(1) AS number_of_trips\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/**',\n        FORMAT = 'PARQUET'\n    ) AS trip_data\nGROUP BY DATEDIFF(MINUTE, lpep_pickup_datetime, lpep_dropoff_datetime)/60,\n(DATEDIFF(MINUTE, lpep_pickup_datetime, lpep_dropoff_datetime)/60)+1\nORDER BY from_hour, to_hour",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/14_create_gold_trip_data_green')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n\n/*SELECT top(100) td.year, td.month, CONVERT(DATE, td.lpep_pickup_datetime) AS trip_date,\ncal.day_name AS trip_day, \nSUM(CASE WHEN pt.description = 'Credit Card' THEN 1 ELSE 0 END) AS card_trip_count,\nSUM(CASE WHEN pt.description = 'Cash' THEN 1 ELSE 0 END) AS cash_trip_count\nCASE WHEN cal.day_name IN ('Saturday','Sunday') THEN 'Y' ELSE 'N' END AS trip_day_weekend_ind\n    FROM silver.vw_trip_data_green td\n    JOIN silver.taxi_zone tz ON (td.pu_location_id = tz.location_id)\n    JOIN silver.calendar cal ON (cal.date = CONVERT(DATE,td.lpep_pickup_datetime ))\n    JOIN silver.payment_type pt ON (td.payment_type = pt.payment_type)\nWHERE td.year = '2020'\nAND td.month = '01'\nGROUP BY td.year,\n    td.month,\n    tz.borough,\n    convert(DATE, td.lpep_pickup_datetime ),\n    cal.day_name\n    */\n\nEXEC gold.usp_gold_trip_data_green '2020','01'",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/14_discovery_assign')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery;\n\nWITH v_payment_type AS \n(\n    SELECT CAST(JSON_value(jsonDoc,'$.payment_type') AS SMALLINT) payment_type,\n    CAST(JSON_VALUE(jsonDoc,'$.payment_type_desc') AS VARCHAR(15)) payment_type_desc\n    FROM OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/payment_type.json',\n        FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0a'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS payment_type\n),  \nv_taxi_zone AS\n(\n    \n        SELECT * FROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV', PARSER_VERSION = '2.0', FIRST_ROW = 2, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n        ) WITH \n        (\n        location_id SMALLINT 1,\n        borough VARCHAR(15) 2,\n        zone VARCHAR(50) 3,\n        service_zone VARCHAR(15) 4\n        )\n    AS taxi_zone\n), \nv_trip_data AS (\n    SELECT *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2021/month=01/**',\n        FORMAT = 'PARQUET'\n    ) AS trip_data\n)\nSELECT v_taxi_zone.borough,\nCOUNT(1) AS total_trips,\nSUM(CASE WHEN v_payment_type.payment_type_desc='Cash' THEN 1 ELSE 0 END) AS cash_trips,\nSUM(CASE WHEN v_payment_type.payment_type_desc='Credit Card' THEN 1 ELSE 0 END) AS card_trips,\nCAST((SUM(CASE WHEN v_payment_type.payment_type_desc='Cash' THEN 1 ELSE 0 END)/CAST(COUNT(1) AS DECIMAL)) * 100 AS DECIMAL(5,2)) AS cash_trips_percent,\nCAST((SUM(CASE WHEN v_payment_type.payment_type_desc='Credit card' THEN 1 ELSE 0 END)/CAST(COUNT(1) AS DECIMAL)) * 100 AS DECIMAL(5,2)) AS card_trips_percent\nFrom v_trip_data\nLEFT JOIN v_payment_type ON (v_trip_data.payment_type = v_payment_type.payment_type)\nLEFT join v_taxi_zone ON (v_trip_data.PULocationId = v_taxi_zone.location_id)\nwhere v_payment_type.payment_type_desc IN ('Cash','Credit card')\ngroup by v_taxi_zone.borough\nORDER by v_taxi_zone.borough;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/15_create_gold_views')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\n\n\n--create view for trip_data_green\nDROP VIEW IF EXISTS gold.vw_trip_data_green_csv\nGO\nCREATE VIEW gold.vw_trip_data_green_csv\nAS\nSELECT\n    \n    result.filepath(1) as year,\n    result.filepath(2) as month,\n    result.*\nFROM\n    OPENROWSET(\n        BULK 'gold/trip_data_green_csv/year=*/month=*/*.parquet', DATA_SOURCE = 'nyc_taxi_src',\n        FORMAT = 'PARQUET'\n    )WITH(\n        borough VARCHAR(15),\n        trip_date DATE,\n        trip_day VARCHAR(10),\n        trip_day_weekend_ind CHAR(1),\n        card_trip_count INT,\n        cash_trip_count INT,\n        street_hail_trip_count INT,\n        dispatch_trip_count INT,\n        trip_distance FLOAT,\n        trip_duration INT,\n        fare_amount FLOAT\n        ) AS [result]\nGO\n\nSELECT TOP(100) * from gold.vw_trip_data_green_csv\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/1_create_databases')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE MASTER\nGO\n\nCREATE DATABASE nyc_taxi_ldw\nGO\n\nALTER DATABASE nyc_taxi_ldw collate Latin1_General_100_BIN2_UTF8\nGO\n\nUSE nyc_taxi_ldw\nGO\n\nCREATE SCHEMA bronze\nGO\n\nCREATE SCHEMA silver\nGO\n\nCREATE SCHEMA gold\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/1_explore_taxi_zone')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://synapsecoursedlshreyas.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0'\n    ) AS [result]\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n    ) AS [result]\n\n--Examine data types for the columns\n EXEC sp_describe_first_result_set N'SELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK ''abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv'',\n        FORMAT = ''CSV'',\n        PARSER_VERSION = ''2.0'', HEADER_ROW = TRUE\n    ) AS [result]'\n\nSELECT\n    MAX(LEN(LocationID)) as len_location_Id,\n    MAX(LEN(Borough)) as len_Borough,\n    MAX(LEN(Zone)) as len_Zone,\n    MAX(LEN(service_zone)) as len_service_zone\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n    ) AS [result];\n\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n    ) WITH (\n        LocationID SMALLINT,\n        Borough VARCHAR(15),\n        Zone VARCHAR(50),\n        service_zone VARCHAR(15)\n\n    )\n    AS [result]\n\n\nSELECT name, collation_name FROM sys.databases;\n\n--UTF-8 collation\n\nCREATE DATABASE nyc_taxi_discovery;\n\nALTER DATABASE nyc_taxi_discovery COLLATE Latin1_General_100_CI_AI_SC_UTF8;\n\nUSE nyc_taxi_discovery\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n    ) WITH (\n        LocationID SMALLINT,\n        Borough VARCHAR(15),\n        Zone VARCHAR(50),\n        service_zone VARCHAR(15)\n\n    )\n    AS [result];\n\n--Query a subset of columns\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n    ) WITH (\n       \n        Borough VARCHAR(15),\n        Zone VARCHAR(50)\n\n    )\n    AS [result];\n\n--Allocate a column name\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n    ) WITH (\n       Zone VARCHAR(50) 3,\n        Borough VARCHAR(15) 2\n        \n\n    )\n    AS [result];\n\n\n--Fix Column Names\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', FIRST_ROW = 2, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n    ) WITH (\n        location_id SMALLINT 1,\n        borough VARCHAR(15) 2,\n        zone VARCHAR(50) 3,\n        service_zone VARCHAR(15) 4\n\n    )\n    AS [result]\n\n    --Create external data source\n    CREATE EXTERNAL DATA SOURCE nyc_taxi_data_raw\n    WITH(\n        LOCATION = 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net'\n    )\n--Query newly create data source\n    SELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'raw/taxi_zone.csv',\n        DATA_SOURCE = 'nyc_taxi_data_raw',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', FIRST_ROW = 2, FIELDTERMINATOR = ',', ROWTERMINATOR = '\\n'\n    ) WITH (\n        location_id SMALLINT 1,\n        borough VARCHAR(15) 2,\n        zone VARCHAR(50) 3,\n        service_zone VARCHAR(15) 4\n\n    )\n    AS [result];\n\n\nDROP EXTERNAL DATA SOURCE nyc_taxi_data;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/1_usp_silver_trip_data_green')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw/usp"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\n\nCREATE OR ALTER PROCEDURE silver.usp_silver_trip_data_green\n@year VARCHAR(4),\n@month VARCHAR(2)\nAS\nBEGIN\n\nDECLARE @create_sql_stmt VARCHAR(MAX),\n        @drop_sql_stmt VARCHAR(MAX);\n\nSET @create_sql_stmt = \n    'CREATE EXTERNAL TABLE silver.trip_data_green_' + @year + '_' + @month +\n    'WITH\n    (\n        DATA_SOURCE = nyc_taxi_src,\n        LOCATION = ''silver/trip_data_green/year='+@year+'/month='+''',\n        FILE_FORMAT = parquet_file_format\n    ) \nAS\nSELECT *\nFROM bronze.vw_trip_data_green_csv\nWHERE year = ''' + @year + '''\n    AND month = ''' + @month + '''';\n\nprint(@create_sql_stmt)\nEXEC sp_executesql @create_sql_stmt;\n\nSET @drop_sql_stmt = 'DROP EXTERNAL TABLE silver.trip_data_green_' + @year + '_' + @month;\nprint(@drop_sql_stmt)\nEXEC sp_executesql @drop_sql_stmt;\nend;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/2_create_datasource')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'nyc_taxi_src')\nCREATE EXTERNAL DATA SOURCE nyc_taxi_src\nWITH(\n    LOCATION = 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net'\n    \n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/2_explore_calender')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery;\n\nSELECT *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/calendar.csv',\n        FORMAT = 'CSV', HEADER_ROW = TRUE,\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS cal;\n\nEXEC sp_describe_first_result_set N'SELECT *\nFROM\n    OPENROWSET(\n        BULK ''abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/calendar.csv'',\n        FORMAT = ''CSV'', HEADER_ROW = TRUE,\n        PARSER_VERSION = ''2.0''\n    ) AS cal'\n\n\nSELECT *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/calendar.csv',\n        FORMAT = 'CSV', HEADER_ROW = TRUE,\n        PARSER_VERSION = '2.0'\n    ) WITH(\n        date_key INT,\n        date date,\n        year SMALLINT,\n        month TINYINT,\n        day TINYINT,\n        day_name VARCHAR(10),\n        day_of_year SMALLINT,\n        week_of_month TINYINT,\n        week_of_year TINYINT,\n        month_name VARCHAR(10),\n        year_month INT,\n        year_week INT\n    )\n     AS cal;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/2_usp_gold_trip_data_green_Copy1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw/usp"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\n\nCREATE OR ALTER PROCEDURE gold.usp_goldr_trip_data_green\n@year VARCHAR(4),\n@month VARCHAR(2)\nAS\nBEGIN\n\nDECLARE @create_sql_stmt VARCHAR(MAX),\n        @drop_sql_stmt VARCHAR(MAX);\n\nSET @create_sql_stmt = \n    'CREATE EXTERNAL TABLE gold.trip_data_green_' + @year + '_' + @month +\n    'WITH\n    (\n        DATA_SOURCE = nyc_taxi_src,\n        LOCATION = ''gold/trip_data_green/year='+@year+'/month='+''',\n        FILE_FORMAT = parquet_file_format\n    ) \nAS\nSELECT top(100) td.year, td.month, CONVERT(DATE, td.lpep_pickup_datetime) AS trip_date,\ncal.day_name AS trip_day, \nCASE WHEN cal.day_name IN (''Saturday'',''Sunday'') THEN ''Y'' ELSE ''N'' END AS trip_day_weekend_ind,\nSUM(CASE WHEN pt.description = ''Credit Card'' THEN 1 ELSE 0 END) AS card_trip_count,\nSUM(CASE WHEN pt.description = ''Cash'' THEN 1 ELSE 0 END) AS cash_trip_count,\nSUM(CASE WHEN tt.trip_type_desc = ''Street-hail'' THEN 1 ELSE 0 END) AS street_hail_trip_count,\nSUM(CASE WHEN tt.trip_type_desc = ''Dispatch'' THEN 1 ELSE 0 END) AS dispatch_trip_count,\nSUM(td.trip_distance) AS trip_distance,\nSUM(DATEDIFF(MINUTE , td.lpep_pickup_datetime,td.lpep_dropoff_datetime)) AS trip_duration,\nSUM(td.fare_amount) AS fare_amount\n\n    FROM silver.vw_trip_data_green td\n    JOIN silver.taxi_zone tz ON (td.pu_location_id = tz.location_id)\n    JOIN silver.calendar cal ON (cal.date = CONVERT(DATE,td.lpep_pickup_datetime ))\n    JOIN silver.payment_type pt ON (td.payment_type = pt.payment_type)\n    JOIN silver.trip_type tt ON (td.trip_type = tt.trip_type)\nWHERE year = ''' + @year + '''\n    AND month = ''' + @month + ''''\n    GROUP BY td.year,\n    td.month,\n    tz.borough,\n    convert(DATE, td.lpep_pickup_datetime ),\n    cal.day_name;\n\nprint(@create_sql_stmt)\nEXEC sp_executesql @create_sql_stmt;\n\nSET @drop_sql_stmt = 'DROP EXTERNAL TABLE gold.trip_data_green_' + @year + '_' + @month;\nprint(@drop_sql_stmt)\nEXEC sp_executesql @drop_sql_stmt;\nend;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/3_create_external_file_formats')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'csv_file_format')\n CREATE EXTERNAL FILE FORMAT csv_file_format\n WITH(\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR = ',',\n        STRING_DELIMITER = '\"',\n        FIRST_ROW = 2,\n        USE_TYPE_DEFAULT = FALSE,\n        ENCODING = 'UTF8',\n        PARSER_VERSION = '2.0'\n    )\n);\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'csv_file_format_pv1')\n CREATE EXTERNAL FILE FORMAT csv_file_format_pv1\n WITH(\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR = ',',\n        STRING_DELIMITER = '\"',\n        FIRST_ROW = 2,\n        USE_TYPE_DEFAULT = FALSE,\n        ENCODING = 'UTF8',\n        PARSER_VERSION = '1.0'\n    )\n);\n--create file format for tsv\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'tsv_file_format')\n CREATE EXTERNAL FILE FORMAT tsv_file_format\n WITH(\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR = '\\t',\n        STRING_DELIMITER = '\"',\n        FIRST_ROW = 2,\n        USE_TYPE_DEFAULT = FALSE,\n        ENCODING = 'UTF8',\n        PARSER_VERSION = '2.0'\n    )\n);\n--create file format for tsv_file_format for parser version 1.0\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'tsv_file_format_pv1')\n CREATE EXTERNAL FILE FORMAT tsv_file_format_pv1\n WITH(\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR = '\\t',\n        STRING_DELIMITER = '\"',\n        FIRST_ROW = 2,\n        USE_TYPE_DEFAULT = FALSE,\n        ENCODING = 'UTF8',\n        PARSER_VERSION = '1.0'\n    )\n);\n\n\n--create external file format for parquet file format\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'parquet_file_format')\n CREATE EXTERNAL FILE FORMAT parquet_file_format\n WITH(\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\n\n--create external file format for delta file format\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'delta_file_format')\n CREATE EXTERNAL FILE FORMAT delta_file_format\n WITH(\n    FORMAT_TYPE = DELTA,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n);\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/3_explore_vendor')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery;\n\nSELECT * FROM OPENROWSET(\n    BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/vendor_unquoted.csv',\n    FORMAT = 'CSV',\n    PARSER_VERSION = '2.0',\n    HEADER_ROW = TRUE\n) AS vendor;\n\nSELECT * FROM OPENROWSET(\n    BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/vendor_escaped.csv',\n    FORMAT = 'CSV',\n    PARSER_VERSION = '2.0',\n    HEADER_ROW = TRUE, \n    ESCAPECHAR = '\\\\' --to escape comma after Technologies in row 1\n) AS vendor;\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/3_usp_silver_taxi_zone')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw/usp"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\n\nCREATE OR ALTER PROCEDURE silver.usp_silver_taxi_zone\nAS\nBEGIN\nIF OBJECT_ID('silver.taxi_zone') IS NOT NULL DROP EXTERNAL TABLE silver.taxi_zone;\n\nCREATE EXTERNAL TABLE silver.taxi_zone\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/taxi_zone',\n        file_format = parquet_file_format\n    )\nAS\nSELECT *\n    from bronze.taxi_zone;\n\nEND;\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/4_create_bronze_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n--create taxi_zone table\nIF OBJECT_ID('bronze.taxi_zone') IS NOT NULL DROP EXTERNAL TABLE bronze.taxi_zone\nCREATE EXTERNAL TABLE bronze.taxi_zone(\n      location_id SMALLINT ,\n        borough VARCHAR(15) ,\n        zone VARCHAR(50) ,\n        service_zone VARCHAR(15)\n) WITH (\n    LOCATION = 'raw/taxi_zone.csv',\n    DATA_SOURCE = nyc_taxi_src,\n    FILE_FORMAT = csv_file_format_pv1,\n    REJECT_VALUE = 10,\n    REJECTED_ROW_LOCATION = 'rejections/taxi_zone'\n);\nSELECT * FROM bronze.taxi_zone;\n\n--create calendar table\nIF OBJECT_ID('bronze.calendar') IS NOT NULL DROP EXTERNAL TABLE bronze.calendar\nCREATE EXTERNAL TABLE bronze.calendar\n(\n  date_key INT,\n  date date,\n  year SMALLINT,\n  month TINYINT,\n  day TINYINT,\n  day_name VARCHAR(10),\n  day_of_year SMALLINT,\n  week_of_month TINYINT,\n  week_of_year TINYINT,\n  month_name VARCHAR(10),\n  year_month INT,\n  year_week INT\n) WITH (\n  LOCATION = 'raw/calendar.csv',\n    DATA_SOURCE = nyc_taxi_src,\n    FILE_FORMAT = csv_file_format_pv1,\n    REJECT_VALUE = 10,\n    REJECTED_ROW_LOCATION = 'rejections/calendar'\n)\nSELECT * FROM bronze.calendar;\n\n\n--create vendor table\nIF OBJECT_ID('bronze.vendor') IS NOT NULL DROP EXTERNAL TABLE bronze.vendor\nCREATE EXTERNAL TABLE bronze.vendor(\n  vendor_id TINYINT,\n  vendor_name VARCHAR(50)\n) WITH (\n  LOCATION = 'raw/vendor.csv',\n    DATA_SOURCE = nyc_taxi_src,\n    FILE_FORMAT = csv_file_format_pv1,\n    REJECT_VALUE = 10,\n    REJECTED_ROW_LOCATION = 'rejections/vendor'\n)\nSELECT * FROM bronze.vendor;\n\n\n--create trip_type table\n IF OBJECT_ID('bronze.trip_type') IS NOT NULL DROP EXTERNAL TABLE bronze.trip_type;\nCREATE EXTERNAL TABLE bronze.trip_type(\n  trip_type TINYINT,\n  trip_type_desc VARCHAR(50)\n) WITH (\n  LOCATION = 'raw/trip_type.tsv',\n  DATA_SOURCE = nyc_taxi_src,\n  FILE_FORMAT = tsv_file_format_pv1,\n  REJECT_VALUE = 10,\n  REJECTED_ROW_LOCATION = 'rejections/trip_type'\n)\nSELECT * FROM bronze.trip_type;\n\n--create trip_data_green_csv table\n\nIF OBJECT_ID('bronze.bronze.trip_data_green_csv') IS NOT NULL DROP EXTERNAL TABLE bronze.trip_data_green_csv;\nCREATE EXTERNAL TABLE bronze.trip_data_green_csv(\n  VendorID INT,\n  lpep_pickup_datetime DATETIME2(7),\n  lpep_dropoff_datetime DATETIME2(7),\n  store_and_fwd_flag CHAR(1),\n  RatecodeID INT,\n  PULocationID INT,\n  DOLocationID INT,\n  passenger_count INT,\n  trip_distance FLOAT,\n  fare_amount FLOAT,\n  extra FLOAT,\n  mta_tax FLOAT,\n  tip_amount FLOAT,\n  tolls_amount FLOAT,\n  ehail_fee INT,\n  improvement_surcharge FLOAT,\n  total_amount FLOAT,\n  payment_type INT,\n  trip_type INT,\n  congestion_surcharge FLOAT\n)WITH (\n  LOCATION = 'raw/trip_data_green_csv/**',\n  DATA_SOURCE = nyc_taxi_src,\n  FILE_FORMAT = csv_file_format\n)\nSELECT * FROM bronze.trip_data_green_csv;\n\n\n\n--create trip_data_green_parquet table\n\nIF OBJECT_ID('bronze.bronze.trip_data_green_parquet') IS NOT NULL DROP EXTERNAL TABLE bronze.trip_data_green_parquet;\nCREATE EXTERNAL TABLE bronze.trip_data_green_parquet(\n  VendorID INT,\n  lpep_pickup_datetime DATETIME2(7),\n  lpep_dropoff_datetime DATETIME2(7),\n  store_and_fwd_flag CHAR(1),\n  RatecodeID INT,\n  PULocationID INT,\n  DOLocationID INT,\n  passenger_count INT,\n  trip_distance FLOAT,\n  fare_amount FLOAT,\n  extra FLOAT,\n  mta_tax FLOAT,\n  tip_amount FLOAT,\n  tolls_amount FLOAT,\n  ehail_fee INT,\n  improvement_surcharge FLOAT,\n  total_amount FLOAT,\n  payment_type INT,\n  trip_type INT,\n  congestion_surcharge FLOAT\n)WITH (\n  LOCATION = 'raw/trip_data_green_parquet/**',\n  DATA_SOURCE = nyc_taxi_src,\n  FILE_FORMAT = parquet_file_format\n)\nSELECT * FROM bronze.trip_data_green_parquet;\n\n--create trip_data_green_delta table\n\nIF OBJECT_ID('bronze.trip_data_green_delta') IS NOT NULL DROP EXTERNAL TABLE bronze.trip_data_green_delta;\nCREATE EXTERNAL TABLE bronze.trip_data_green_delta\n(\n  VendorID INT,\n  lpep_pickup_datetime DATETIME2(7),\n  lpep_dropoff_datetime DATETIME2(7),\n  store_and_fwd_flag CHAR(1),\n  RatecodeID INT,\n  PULocationID INT,\n  DOLocationID INT,\n  passenger_count INT,\n  trip_distance FLOAT,\n  fare_amount FLOAT,\n  extra FLOAT,\n  mta_tax FLOAT,\n  tip_amount FLOAT,\n  tolls_amount FLOAT,\n  ehail_fee INT,\n  improvement_surcharge FLOAT,\n  total_amount FLOAT,\n  payment_type INT,\n  trip_type INT,\n  congestion_surcharge FLOAT\n)WITH (\n  LOCATION = 'raw/trip_data_green_delta',\n  DATA_SOURCE = nyc_taxi_src,\n  FILE_FORMAT = delta_file_format\n);\nSELECT TOP(100) * FROM bronze.trip_data_green_delta;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/4_explore_trip_type')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery;\n\nSELECT * FROM OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_type.tsv',\n        FORMAT = 'CSV', PARSER_VERSION = '2.0', HEADER_ROW = TRUE,\n         HEADER_ROW = TRUE, FIELDTERMINATOR = '\\t'\n    ) AS trip_type;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/4_usp_silver_calendar')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw/usp"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\n\nCREATE OR ALTER PROCEDURE silver.usp_silver_calendar\nAS\nBEGIN\nIF OBJECT_ID('silver.taxi_zone') IS NOT NULL DROP EXTERNAL TABLE silver.calendar\n\n\nCREATE EXTERNAL TABLE silver.calendar\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/calendar',\n        file_format = parquet_file_format\n    )\nAS\nSELECT *\n    from bronze.calendar;\n\nEND;\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/5_create_bronze_views')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw\nGO\nDROP VIEW IF EXISTS bronze.vw_rate_code\nGO\nCREATE VIEW bronze.vw_rate_code\nAS\nSELECT  rate_code_id, rate_code\nFROM OPENROWSET(\n        BULK 'raw/rate_code.json', DATA_SOURCE = 'nyc_taxi_src',\n        FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0b'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS rate_code\n    CROSS APPLY OPENJSON(jsonDoc)\n    WITH (\n        rate_code_id TINYINT,\n        rate_code VARCHAR(20)\n    )\n    GO\n\n    SELECT * FROM bronze.vw_rate_code\n    GO\n\n    --CREATE VIEW FOR PAYMENT TYPE FILE\nDROP VIEW IF EXISTS bronze.vw_payment_type\nGO\nCREATE VIEW bronze.vw_payment_type\nAS\nSELECT  payment_type, description\nFROM OPENROWSET(\n        BULK 'raw/payment_type.json', DATA_SOURCE = 'nyc_taxi_src',\n               FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0a'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS payment_type\n    CROSS APPLY OPENJSON(jsonDoc)\n    WITH (\n        payment_type SMALLINT,\n        description VARCHAR(20) '$.payment_type_desc'\n    )\n    GO\n\n    SELECT * FROM bronze.vw_payment_type\n    GO\n\n\n\n--create view for trip_data_green\nDROP VIEW IF EXISTS bronze.vw_trip_data_green_csv\nGO\nCREATE VIEW bronze.vw_trip_data_green_csv\nAS\nSELECT\n    \n    result.filepath(1) as year,\n    result.filepath(2) as month,\n    result.*\nFROM\n    OPENROWSET(\n        BULK 'raw/trip_data_green_csv/year=*/month=*/*.csv', DATA_SOURCE = 'nyc_taxi_src',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    )WITH(\n        VendorID INT,\n        lpep_pickup_datetime DATETIME2(7),\n        lpep_dropoff_datetime DATETIME2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n    ) AS [result]\nGO\n\nSELECT count(1) from bronze.vw_trip_data_green_csv\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/5_payment_type')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery;\n\nSELECT CAST(JSON_VALUE(jsonDoc,'$.payment_type') AS SMALLINT) payment_type,\nCAST(JSON_VALUE(jsonDoc,'$.payment_type_desc') AS VARCHAR(15)) payment_type_desc\n FROM OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/payment_type.json',\n        FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0a'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS payment_type;\n\nEXEC sp_describe_first_result_set N'\nSELECT CAST(JSON_VALUE(jsonDoc,''$.payment_type'') AS SMALLINT) payment_type,\nCAST(JSON_VALUE(jsonDoc,''$.payment_type_desc'') AS VARCHAR(15)) payment_type_desc\n FROM OPENROWSET(\n        BULK ''abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/payment_type.json'',\n        FORMAT = ''CSV'', PARSER_VERSION = ''1.0'',  FIELDTERMINATOR = ''0x0b'', FIELDQUOTE = ''0x0b'',\n        ROWTERMINATOR = ''0x0a''\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS payment_type';\n\n\n\n    SELECT  payment_type, description\n FROM OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/payment_type.json',\n        FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0a'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS payment_type\n    CROSS APPLY OPENJSON(jsonDoc)\n    WITH (\n        payment_type SMALLINT,\n        description VARCHAR(20) '$.payment_type_desc'\n    );\n\n\n\n    --Reading data from JSON with array\nSELECT CAST(JSON_VALUE(jsonDoc,'$.payment_type') AS SMALLINT) payment_type,\nCAST(JSON_VALUE(jsonDoc,'$.payment_type_desc[0].value') AS VARCHAR(15)) payment_type_desc_0,\nCAST(JSON_VALUE(jsonDoc,'$.payment_type_desc[1].value') AS VARCHAR(15)) payment_type_desc_1 --This is not desirable. So look next section\n FROM OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/payment_type_array.json',\n        FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0a'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS payment_type;\n\n\n    --Use openJSON function to explore array\n\n SELECT payment_type, payment_type_desc_value \n FROM OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/payment_type_array.json',\n        FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0a'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS payment_type\n    CROSS APPLY OPENJSON(jsonDoc)\n    WITH(\n        payment_type SMALLINT,\n        payment_type_desc NVARCHAR(MAX) as JSON\n    )\n    CROSS APPLY OPENJSON(payment_type_desc)\n    WITH (\n        sub_type SMALLINT,\n        payment_type_desc_value VARCHAR(20) '$.value'\n    );   ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/6_create_silver_taxi_zone')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n\nIF OBJECT_ID('silver.taxi_zone') IS NOT NULL DROP EXTERNAL TABLE silver.taxi_zone\nGO\n\nCREATE EXTERNAL TABLE silver.taxi_zone\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/taxi_zone',\n        file_format = parquet_file_format\n    )\nAS\nSELECT *\n    from bronze.taxi_zone;\n\nSELECT * FROM silver.taxi_zone;\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/6_explore_rate_code')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": " USE nyc_taxi_discovery;\n \n SELECT  rate_code_id, rate_code\n FROM OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/rate_code.json',\n        FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0b'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS rate_code\n    CROSS APPLY OPENJSON(jsonDoc)\n    WITH (\n        rate_code_id TINYINT,\n        rate_code VARCHAR(20)\n    );\n\n\n--Multi-Line-JSON\n\n SELECT  rate_code_id, rate_code\n FROM OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/rate_code_multi_line.json',\n        FORMAT = 'CSV', PARSER_VERSION = '1.0',  FIELDTERMINATOR = '0x0b', FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0b'\n    ) WITH(\n        jsonDoc NVARCHAR(MAX)\n    ) AS rate_code\n    CROSS APPLY OPENJSON(jsonDoc)\n    WITH (\n        rate_code_id TINYINT,\n        rate_code VARCHAR(20)\n    );  --No difference ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/7_create_silver_calendar')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n\nIF OBJECT_ID('silver.calendar') IS NOT NULL DROP EXTERNAL TABLE silver.calendar\nGO\n\nCREATE EXTERNAL TABLE silver.calendar\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/calendar',\n        file_format = parquet_file_format\n    )\nAS\nSELECT *\n    from bronze.calendar;\n\nSELECT * FROM silver.calendar;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/7_explore_trip_data_green_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "-- This is auto-generated code\nUSE nyc_taxi_discovery;\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=2020/month=01/green_tripdata_2020-01.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n\n\n--Select data from folder\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=2020/month=01/',  --*.csv forr all csv files\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n\n\n--Select data from subfolders\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=2020/**',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK ('abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=2020/month=01/*.csv',\n        'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=2020/month=02/*.csv'),\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n\n\n--Use more than 1 wildcard character\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=*/month=*/*.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n\n--File metadata function filename()\n\nSELECT\n    TOP 100 result.filename() as file_name,\n    result.*\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=*/month=*/*.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n\nSELECT\n    result.filename() as file_name,\n    COUNT(1) AS record_count\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=*/month=*/*.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n    GROUP BY result.filename()\n    ORDER BY result.filename()\n\n\nSELECT\n    result.filename() as file_name,\n    COUNT(1) AS record_count\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=*/month=*/*.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n    WHERE result.filename() IN ('green_tripdata_2020-01.csv', 'green_tripdata_2021-02.csv')\n    GROUP BY result.filename()\n    ORDER BY result.filename()\n\n\nSELECT\n    result.filename() as file_name,\n    result.filepath(1) as year,\n    result.filepath(2) as month,\n    COUNT(1) AS record_count\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=*/month=*/*.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n    WHERE result.filename() IN ('green_tripdata_2020-01.csv', 'green_tripdata_2021-02.csv')\n    GROUP BY result.filename(),result.filepath(1),result.filepath(2)\n    ORDER BY result.filename(),result.filepath(1),result.filepath(2)\n\n\n--Use file path in where clause\n\n\nSELECT\n    \n    result.filepath(1) as year,\n    result.filepath(2) as month,\n    COUNT(1) AS record_count\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_csv/year=*/month=*/*.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0', HEADER_ROW = TRUE\n    ) AS [result]\n    WHERE result.filepath(1) = '2020'\n    AND result.filepath(2) IN ('06','07','08')\n    GROUP BY result.filename(),result.filepath(1),result.filepath(2)\n    ORDER BY result.filename(),result.filepath(1),result.filepath(2)",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/8_create_silver_trip_type')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n\nIF OBJECT_ID('silver.trip_type') IS NOT NULL DROP EXTERNAL TABLE silver.trip_type\nGO\n\nCREATE EXTERNAL TABLE silver.trip_type\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/trip_type',\n        file_format = parquet_file_format\n    )\nAS\nSELECT *\n    from bronze.trip_type;\n\nSELECT * FROM silver.trip_type;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/8_explore-trip_data_green_parquet')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery\n\nSELECT TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n\n--Identify the inferred data types\nEXEC sp_describe_first_result_set N'SELECT TOP 100 * FROM\nOPENROWSET(\n        BULK ''abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/'',\n        FORMAT = ''PARQUET''\n    ) AS [result]'\n\n\n--Define columns and data types\nSELECT TOP 100 * FROM\nOPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/',\n        FORMAT = 'PARQUET'\n    ) WITH(\n        VendorID INT,\n        lpep_pickup_datetime DATETIME2(7),\n        lpep_dropoff_datetime DATETIME2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n    )AS [result]\n\n\n--Select only reqd columns\n\nSELECT TOP 100 * FROM\nOPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/',\n        FORMAT = 'PARQUET'\n    ) WITH(\n        \n        tip_amount FLOAT,\n        \n        trip_type INT\n    )AS [result]\n\n\n    --Query using wildcard characters\n\n  SELECT TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/*.parquet',\n        FORMAT = 'PARQUET'\n    ) AS trip_data\n\n\n--Get filename\n  SELECT TOP 100 \n  trip_data.filename() AS file_name,\n  trip_data.*\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=2020/month=01/*.parquet',\n        FORMAT = 'PARQUET'\n    ) AS trip_data\n\n--Query from sub folders\n  SELECT TOP 100 \n  trip_data.filename() AS file_name,\n  trip_data.*\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/**',\n        FORMAT = 'PARQUET'\n    ) AS trip_data\n\n\n--Use filepath to target partitions\nSELECT trip_data.filepath(1) as year,\n    trip_data.filepath(2) as month,\n    COUNT(1) AS record_count\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_parquet/year=*/month=*/*.parquet',\n        FORMAT = 'PARQUET'\n    ) AS trip_data\n    WHERE trip_data.filepath(1) = '2020'\n    AND trip_data.filepath(2) IN ('06','07','08')\n    GROUP BY trip_data.filepath(1),trip_data.filepath(2)\n    ORDER BY trip_data.filepath(1),trip_data.filepath(2);\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/9_create_silver_vendor')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/ldw"
				},
				"content": {
					"query": "USE nyc_taxi_ldw;\n\nIF OBJECT_ID('silver.vendor') IS NOT NULL DROP EXTERNAL TABLE silver.vendor\nGO\n\nCREATE EXTERNAL TABLE silver.vendor\n    WITH (\n        data_source = nyc_taxi_src,\n        location = 'silver/vendor',\n        file_format = parquet_file_format\n    )\nAS\nSELECT *\n    from bronze.vendor;\n\nSELECT * FROM silver.vendor;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/9_explore-trip_data_green_delta')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "nyc_taxi/discovery"
				},
				"content": {
					"query": "USE nyc_taxi_discovery;\nSELECT TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_delta/',\n        FORMAT = 'DELTA'\n    ) AS trip_data\n\nEXEC sp_describe_first_result_set N'\nSELECT TOP 100 *\nFROM\n    OPENROWSET(\n        BULK ''abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_delta/'',\n        FORMAT = ''DELTA''\n    ) AS trip_data'\n\n\nSELECT TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_delta/',\n        FORMAT = 'DELTA'\n    ) WITH(\n        VendorID INT,\n        lpep_pickup_datetime DATETIME2(7),\n        lpep_dropoff_datetime DATETIME2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT,\n        year VARCHAR(4),\n        month VARCHAR(2)\n\n    \n    )\n    AS trip_data\n\n\nSELECT COUNT(DISTINCT payment_type)\nFROM\n    OPENROWSET(\n        BULK 'abfss://nyc-taxi-data@synapsecoursedlshreyas.dfs.core.windows.net/raw/trip_data_green_delta/',\n        FORMAT = 'DELTA'\n    ) AS trip_data \n    WHERE year = '2020' AND month = '01'",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "nyc_taxi_discovery",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}